# -*- mode: ruby -*-
# vi: set ft=ruby :


########### There are global values that drives the various values ########
INSTANCES = 1
HOSTNAME_PREFIX = "mmsauto-"
HOSTNAME_SUFFIX = ""
IP_ADDRESS_PREFIX = "192.168.20."
IP_SUFFIX_START = 1

###### MMS Automation Agent Specific Keys
MMS_AUTOMATION_AGENT_KEY = ENV["MMS_AUTOMATION_AGENT_KEY"]
MMS_AUTOMATION_AGENT_GROUP_ID = ENV["MMS_AUTOMATION_AGENT_GROUP_ID"]
################################################


$MMS_AUTOMATION_SCRIPT = <<EOF
touch /var/log/vagrant-setup.log; \
export MMS_AUTOMATION_AGENT_KEY = $MMS_AUTOMATION_AGENT_KEY; \
export MMS_AUTOMATION_AGENT_GROUP_ID = $MMS_AUTOMATION_AGENT_GROUP_ID; \
source /vagrant/config/mms-automation-base/config.sh | tee -a /var/log/vagrant-setup.log; \
echo "AgentKey => $MMS_AUTOMATION_AGENT_KEY" | tee -a /var/log/vagrant-setup.log; \
echo "AgentGroupId => $MMS_AUTOMATION_AGENT_GROUP_ID" | tee -a /var/log/vagrant-setup.log; \
sh /vagrant/config/mms-automation-base/install.sh    | tee -a /var/log/vagrant-setup.log;
EOF

Vagrant.configure("2") do |config|

	(1..INSTANCES).each do |i|
	#INSTANCES.times do |i|
		ipSuffix = IP_SUFFIX_START + i
		if ipSuffix >= 254
			# Stop here since running out of IP for /24 block
			print "Running out of IP addresses for [Prefix: %s, ipSuffix: %d]\n" % [IP_ADDRESS_PREFIX, ipSuffix]
			exit
		end

		isPrimary = (ipSuffix == (IP_SUFFIX_START + 1) )

		#boxHostname = "#{HOSTNAME_PREFIX}#{ipSuffix}#{HOSTNAME_SUFFIX}"
		boxIPAddress = "%s%d" % [IP_ADDRESS_PREFIX, ipSuffix]
		boxIPHostname = boxIPAddress.gsub(/\./, "-")
		boxHostname = "%sip%s%s" % [HOSTNAME_PREFIX, boxIPHostname, HOSTNAME_SUFFIX]
		boxName = "%s%d" % [HOSTNAME_PREFIX, ipSuffix]

		config.vm.define boxName, primary: isPrimary do |mmsbox|
			print "Configuring Instance [Counter: ", i, ", IP: ", boxIPAddress, ", Hostname: ", boxHostname, "\n"

			# pick my own version here
			mmsbox.vm.box = "CentoOS 6.4"
			mmsbox.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box"

			mmsbox.vm.provider "virtualbox" do |v|
				# v.customize ["modifyvm", :id, "--cpus", "2"]
			end

			mmsbox.vm.network :private_network, ip: boxIPAddress
			mmsbox.vm.hostname = boxHostname
			mmsbox.vm.provision :shell, :inline => $MMS_AUTOMATION_SCRIPT
		end

		if isPrimary
			isPrimary = false
		end
	end
end
